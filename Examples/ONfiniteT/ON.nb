(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    103589,       2157]
NotebookOptionsPosition[     98231,       2059]
NotebookOutlinePosition[     98691,       2077]
CellTagsIndexPosition[     98648,       2074]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Truncation Setup", "Title",
 CellChangeTimes->{{3.892789243255928*^9, 3.892789245576097*^9}, {
  3.9115400384234324`*^9, 3.911540040363307*^9}, {3.91157933808308*^9, 
  3.911579338623599*^9}},ExpressionUUID->"5b71f437-634b-42e9-b340-\
4c923acf3a10"],

Cell["\<\
First  thing is to import the package. Although unnecessary here, we set the \
working directory to be where the notebook resides and inform FormTracer of a \
few variables.\
\>", "Text",
 CellChangeTimes->{{3.93330027317593*^9, 
  3.9333003189670753`*^9}},ExpressionUUID->"989f4386-a678-4978-a5fb-\
4f3b725596b7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<DiFfRG`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"GetDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AddExtraVars", "[", 
   RowBox[{
   "k", ",", "RB", ",", "RBdot", ",", "rhoPhi", ",", "m2Pi", ",", "m2Sigma"}],
    "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.915773012526752*^9, 3.915773041185543*^9}, {
   3.915773086841701*^9, 3.915773102323442*^9}, 3.915773169935446*^9, 
   3.915773664846424*^9, 3.915885094875429*^9, {3.915885350421919*^9, 
   3.915885352652009*^9}, {3.915885397603085*^9, 3.915885459578352*^9}, 
   3.915885753788966*^9, {3.915889194497629*^9, 3.915889282768508*^9}, {
   3.915889319267647*^9, 3.915889351348608*^9}, {3.9158905945245543`*^9, 
   3.915890604487877*^9}, {3.915891276837954*^9, 3.915891276990889*^9}, 
   3.915893628711564*^9, {3.91589486262519*^9, 3.915894865341238*^9}, {
   3.915895860959857*^9, 3.915895866977996*^9}, {3.918572359306779*^9, 
   3.918572367771438*^9}, {3.922247191855521*^9, 3.922247202683255*^9}, {
   3.930997667977694*^9, 3.930997668190227*^9}, {3.933259190050644*^9, 
   3.933259190274475*^9}, {3.933259517248689*^9, 3.933259518168454*^9}, {
   3.933260862453533*^9, 3.933260863100533*^9}, {3.933260954261422*^9, 
   3.933260954507678*^9}, 3.93796995204292*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"20df238b-bf68-4457-b32a-37933d8ae3f5"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Mathematica package \
\\!\\(\\*\\nStyleBox[\\\"DiFfRG\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontWeight->\\\"Bold\\\"]\\)loaded\\n\\!\\(\\*\\nStyleBox[\\\"Authors\
\\\",\\nFontWeight->\\\"Bold\\\"]\\): Franz Richard \
Sattler\\n\\!\\(\\*\\nStyleBox[\\\"Version\\\",\\nFontWeight->\\\"Bold\\\"]\\)\
: 1.0\\n\\!\\(\\*\\nStyleBox[\\\"Year\\\",\\nFontWeight->\\\"Bold\\\"]\\): \
2024\\n\"\>"], "Print",
 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.9379699743369713`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"5d8cdf2e-609a-48a3-9d1f-4d863bf8b175"],

Cell[BoxData["\<\"Mathematica package \
\\!\\(\\*\\nStyleBox[\\\"TensorBases\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\
\\*\\nStyleBox[\\\" \
\\\",\\nFontWeight->\\\"Bold\\\"]\\)loaded\\n\\!\\(\\*\\nStyleBox[\\\"Authors\
\\\",\\nFontWeight->\\\"Bold\\\"]\\): Andreas Gei\[SZ]el, Franz Richard \
Sattler\\n\\!\\(\\*\\nStyleBox[\\\"Version\\\",\\nFontWeight->\\\"Bold\\\"]\\)\
: 1.0\\n\\!\\(\\*\\nStyleBox[\\\"Year\\\",\\nFontWeight->\\\"Bold\\\"]\\): \
2024\\n\\nFor a list of available bases, call \\!\\(\\*\\nStyleBox[\\\"TBInfo\
\\\",\\nFontColor->RGBColor[1, 0.5, 0]]\\)[]. For further information on a \
particular basis, call \
\\!\\(\\*\\nStyleBox[\\\"TBInfo\\\",\\nFontColor->RGBColor[1, 0.5, \
0]]\\)[\\\"\\!\\(\\*\\nStyleBox[\\\"BasisName\\\",\\nFontColor->GrayLevel[0.5]\
]\\)\\\"].\\n\\nThis package provides the methods \
\\!\\(\\*\\nStyleBox[\\\"TBGetBasisElement\\\",\\nFontColor->RGBColor[1, 0.5, \
0]]\\), \\!\\(\\*\\nStyleBox[\\\"TBGetInnerProduct\\\",\\nFontColor->RGBColor[\
1, 0.5, 0]]\\), \
\\!\\(\\*\\nStyleBox[\\\"TBGetMetric\\\",\\nFontColor->RGBColor[1, 0.5, \
0]]\\), \\!\\(\\*\\nStyleBox[\\\"TBGetInverseMetric\\\",\\nFontColor->\
RGBColor[1, 0.5, 0]]\\), \
\\!\\(\\*\\nStyleBox[\\\"TBGetProjector\\\",\\nFontColor->RGBColor[1, 0.5, \
0]]\\) for every tensor basis available.\\nFor closer explanations, please \
call their usage messages, e.g. \
\\!\\(\\*\\nStyleBox[\\\"TBGetProjector\\\",\\nFontColor->RGBColor[1, 0.5, \
0]]\\)::\\!\\(\\*\\nStyleBox[\\\"usage\\\",\\nFontColor->RGBColor[0, 0, \
1]]\\).\\n\"\>"], "Print",
 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.937969974370109*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6738eee9-7f61-402f-b957-86dddbce7ec6"],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"FormTracer\\\",\\nFontWeight->\\\"\
Bold\\\"]\\) package loaded. \"\>"], "Print",
 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.937969975175313*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"8a973825-cf4f-41ce-8e5d-6bb687bb3b15"],

Cell[BoxData["\<\"To see all (user-defined and package-defined) FormTracer \
definitions, call \
\\!\\(\\*\\nStyleBox[\\\"TBInfo\\\",\\nFontColor->RGBColor[1, 0.5, \
0]]\\)[\\\"FormTracer\\\"].\\nFurthermore, \
\\!\\(\\*\\nStyleBox[\\\"TensorBases\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\
\\*\\nStyleBox[\\\" \\\",\\nFontWeight->\\\"Bold\\\"]\\)extends \
\\!\\(\\*\\nStyleBox[\\\"FormTracer\\\",\\nFontWeight->\\\"Bold\\\"]\\). To \
see all extensions, call \
\\!\\(\\*\\nStyleBox[\\\"TBInfo\\\",\\nFontColor->RGBColor[1, 0.5, \
0]]\\)[\\\"Extensions\\\"]\"\>"], "Print",
 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.937969975176591*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"651dc40d-7539-4dff-ac14-3411d20d3004"],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Lorentz\\\",\\nFontSize->10,\\\
nFontColor->RGBColor[0.5, 0, 0.5]]\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"group\\\",\\nFontSize->10]\\)\
\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"undefined\\\",\\nFontSize->\
10]\\)\\!\\(\\*\\nStyleBox[\\\",\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\
\\\" \\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"using\\\",\\nFontSize->\
10]\\)\\!\\(\\*\\nStyleBox[\\\" \\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\
\\\"default\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"names\\\",\\nFontSize->10]\\)\
\\!\\(\\*\\nStyleBox[\\\".\\\",\\nFontSize->10]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.937969975177558*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"026a844e-7160-4bb8-9dd8-ba3088ff5b46"],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Group\\\",\\nFontSize->10]\\)\\!\\(\
\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"with\\\",\\nFontSize->10]\\)\
\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"name\\\",\\nFontSize->10]\\)\
\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"color\\\",\\nFontSize->10,\\\
nFontColor->RGBColor[0.5, 0, 0.5]]\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"undefined\\\",\\nFontSize->\
10]\\)\\!\\(\\*\\nStyleBox[\\\",\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\
\\\" \\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"using\\\",\\nFontSize->\
10]\\)\\!\\(\\*\\nStyleBox[\\\" \\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\
\\\"default\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"names\\\",\\nFontSize->10]\\)\
\\!\\(\\*\\nStyleBox[\\\".\\\",\\nFontSize->10]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.937969975451293*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1c3ed5d6-4369-434e-a783-b16039cc33df"],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Group\\\",\\nFontSize->10]\\)\\!\\(\
\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"with\\\",\\nFontSize->10]\\)\
\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"name\\\",\\nFontSize->10]\\)\
\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"flavor\\\",\\nFontSize->10,\\\
nFontColor->RGBColor[0.5, 0, 0.5]]\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"undefined\\\",\\nFontSize->\
10]\\)\\!\\(\\*\\nStyleBox[\\\",\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\
\\\" \\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"using\\\",\\nFontSize->\
10]\\)\\!\\(\\*\\nStyleBox[\\\" \\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\
\\\"default\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSize->10]\\)\\!\\(\\*\\nStyleBox[\\\"names\\\",\\nFontSize->10]\\)\
\\!\\(\\*\\nStyleBox[\\\".\\\",\\nFontSize->10]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.937969975788845*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b4cab32d-84da-4cab-af16-72e3da48ad19"],

Cell[BoxData["\<\"\\nTo see all momentum transformations that can be \
performed by \\!\\(\\*\\nStyleBox[\\\"TensorBases\\\",\\nFontWeight->\\\"Bold\
\\\"]\\), call \\!\\(\\*\\nStyleBox[\\\"TBInfo\\\",\\nFontColor->RGBColor[1, \
0.5, 0]]\\)[\\\"Momenta\\\"].\\n\"\>"], "Print",
 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.9379699773014193`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"0576deb9-1eb9-466c-b345-8a272637fc04"],

Cell[BoxData["\<\"Flow output directory: \
/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/flows/\"\>"], "Print",\

 CellChangeTimes->{
  3.918571994212064*^9, 3.918572134549992*^9, 3.918572307387128*^9, 
   3.918572342099983*^9, {3.918572382602571*^9, 3.918572389877757*^9}, 
   3.918572456238484*^9, 3.918572489052821*^9, 3.918619626940085*^9, 
   3.918619763292537*^9, 3.918990029162848*^9, 3.9189901072622213`*^9, 
   3.919102989905229*^9, 3.922247206378371*^9, {3.922247579238085*^9, 
   3.922247585080922*^9}, 3.930996330210188*^9, {3.930997658660761*^9, 
   3.930997668787936*^9}, 3.9309978243918257`*^9, 3.933258232980384*^9, {
   3.933258990214828*^9, 3.9332590013971663`*^9}, 3.933259515980104*^9, {
   3.933260840655458*^9, 3.933260892691417*^9}, {3.933260944920836*^9, 
   3.9332609547793903`*^9}, 3.933262114509441*^9, 3.933262468203023*^9, 
   3.933262653788653*^9, 3.9332627969051247`*^9, 3.933262932806826*^9, 
   3.933263112419265*^9, 3.933263760768565*^9, 3.933263958279423*^9, 
   3.933264072789443*^9, 3.933264149012456*^9, 3.9332647837738037`*^9, 
   3.93326495626999*^9, 3.933298506676733*^9, 3.933300968691586*^9, 
   3.933301445446539*^9, 3.933301575107448*^9, 3.93330167066962*^9, 
   3.933301870872911*^9, 3.933302210288435*^9, 3.93330254638799*^9, 
   3.933304405373683*^9, 3.9333048784027147`*^9, 3.933304940569264*^9, 
   3.9333049883009863`*^9, {3.933305095982066*^9, 3.933305113950327*^9}, 
   3.937969977901973*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1991ec9b-95cc-4f30-be46-f5ea09f18459"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Then, we  define  SO (N - 1), which  is  the  remaining  symmetry  after  SO \
(N)  has  been  broken .\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.9333002281916857`*^9, 3.933300265193598*^9}, {
  3.933300322062821*^9, 
  3.933300322415324*^9}},ExpressionUUID->"ec71d988-2b9f-4917-a76e-\
66aab15f3b8e"],

Cell[BoxData[
 RowBox[{"DefineGroupTensors", "[", 
  RowBox[{"{", "\[IndentingNewLine]", "   ", 
   RowBox[{"{", 
    RowBox[{"SONfund", ",", " ", 
     RowBox[{"{", 
      RowBox[{"SONm1", ",", " ", 
       RowBox[{"N", "-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"deltaadjSONm1", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
     RowBox[{"SONm1F", "[", 
      RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
     RowBox[{"deltaFundSONm1", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
     RowBox[{"SONm1T", "[", 
      RowBox[{"a", ",", " ", "l", ",", " ", "j"}], "]"}], ",", " ", 
     RowBox[{"adjEpsSONm1", "[", 
      RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
     RowBox[{"epsSONm1", "[", 
      RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], "}"}], "}"}], 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.933261047661379*^9, 3.933261048773332*^9}, {
  3.933261087557096*^9, 3.933261200413136*^9}, {3.93326125356495*^9, 
  3.93326125959617*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"98261f54-6495-4f58-a1f7-94651aeaffca"],

Cell[CellGroupData[{

Cell["Feynman rules", "Chapter",
 CellChangeTimes->{{3.846569359650709*^9, 
  3.846569361977697*^9}},ExpressionUUID->"8e013f21-4885-4ddc-ab0b-\
8ef8932a710d"],

Cell[TextData[{
 "We define in the following all Feynman rules needed to expand the QMeS \
expressions we obtain.\nThe next block is just a little helper to \
automatically get any n-vertex from the effective potential ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", "(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "+", 
       SuperscriptBox["\[Pi]", "2"]}], "2"], ")"}], "=", 
    RowBox[{"V", "(", "\[Rho]", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7a98434b-003e-44a2-b972-c9473617c252"],
 " "
}], "Text",
 CellChangeTimes->{{3.892789273318967*^9, 3.892789316264427*^9}, {
   3.8928270630936327`*^9, 3.892827090014535*^9}, {3.900574385212439*^9, 
   3.9005743945703897`*^9}, 3.90067496451702*^9, 3.900674999423184*^9, {
   3.933300330615139*^9, 
   3.933300402856121*^9}},ExpressionUUID->"b0b75141-4838-4f7e-95bf-\
48874534124a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FunctionalD", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"v", ":", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f_", "[", "_", "]"}], "|", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f_", "[", "_", "]"}], ",", "_Integer"}], "}"}]}], ")"}], 
       ".."}]}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Internal`InheritedBlock", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", 
     RowBox[{
      RowBox[{"f", "/:", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], ",", 
         RowBox[{"f", "[", "y_", "]"}], ",", 
         RowBox[{"NonConstants", "->", 
          RowBox[{"{", "f", "}"}]}]}], "]"}], ":=", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x", "-", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"f", "/:", 
       RowBox[{"D", "[", 
        RowBox[{"f", ",", 
         RowBox[{"f", "[", "y_", "]"}], ",", 
         RowBox[{"NonConstants", "->", 
          RowBox[{"{", "f", "}"}]}]}], "]"}], ":=", 
       RowBox[{
        RowBox[{"DiracDelta", "[", 
         RowBox[{"#", "-", "y"}], "]"}], "&"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"D", "[", 
       RowBox[{"expr", ",", "v", ",", 
        RowBox[{"NonConstants", "->", 
         RowBox[{"{", "f", "}"}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]m\[CapitalPi]n\[Sigma]", "[", 
   RowBox[{"pions_", ",", "sigmas_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"action", ",", "sigmaDeriv"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"action", "=", 
      RowBox[{"Taylor", "[", 
       RowBox[{"V", ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["sigma", "2"], "-", 
             SuperscriptBox["sigma0", "2"]}], ")"}], "+", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "b", "}"}], ",", 
             SuperscriptBox[
              RowBox[{"\[CapitalPi]", "[", "b", "]"}], "2"]}], "]"}]}], "2"], 
         "&"}], ",", 
        RowBox[{
         RowBox[{"Length", "[", "pions", "]"}], "+", "sigmas"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"sigmaDeriv", "=", 
      RowBox[{"D", "[", 
       RowBox[{"action", ",", 
        RowBox[{"{", 
         RowBox[{"sigma", ",", "sigmas"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "pions", "]"}], ">=", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"FunctionalD", "[", 
            RowBox[{"sigmaDeriv", ",", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[CapitalPi]", "[", "#", "]"}], "&"}], ",", 
                "pions"}], "]"}], "/.", " ", 
              RowBox[{"List", "->", "Sequence"}]}]}], "]"}], "//.", 
           RowBox[{
            RowBox[{"DiracDelta", "[", 
             RowBox[{"x_", "-", "y_"}], "]"}], "->", 
            RowBox[{"deltaMesonFlav", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}]}], "//.", 
          RowBox[{
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "y_"}], "]"}], "->", 
           RowBox[{"deltaMesonFlav", "[", 
            RowBox[{"1", ",", "y"}], "]"}]}]}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", "sigmaDeriv"}], "\[IndentingNewLine]", "]"}], 
       "//.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalPi]", "[", "a_", "]"}], "->", "0"}], ",", 
         RowBox[{"sigma0", "->", "sigma"}], ",", 
         RowBox[{"sigma", "->", 
          SqrtBox[
           RowBox[{"2", "rhoPhi"}]]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", "n_", "]"}], "[", "V", "]"}], "[", 
           "a_", "]"}], ":>", 
          RowBox[{"Symbol", "[", 
           RowBox[{"\"\<d\>\"", "<>", 
            RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<V\>\""}], "]"}]}],
          ",", 
         RowBox[{
          RowBox[{"V", "[", "a_", "]"}], "->", "V"}], ",", 
         RowBox[{"d1V", "->", 
          SuperscriptBox["m\[CapitalPi]", "2"]}]}], "}"}]}], "//", 
      "Simplify"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.918365947362512*^9, {3.9217558982875443`*^9, 3.921755900365803*^9}, {
   3.933261409564335*^9, 3.933261439069085*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"91b81fd7-2f9b-4800-8c8d-9734d7e2ede1"],

Cell["\<\
One of the simplest sanity checks to ensure that the propagators have been \
defined correctly is to check that they are actually the inverse of the \
two-point function.\
\>", "Text",
 CellChangeTimes->{{3.933300412359276*^9, 
  3.933300468550787*^9}},ExpressionUUID->"3a71b534-65bb-47dc-9211-\
e42b5083f7b2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FeynmanRules", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", "Regulators", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"R\[CapitalPi]\[CapitalPi]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "a1_", ",", "p2_", ",", "a2_"}], "}"}], "]"}], 
       "\[RuleDelayed]", "  ", 
       RowBox[{
        RowBox[{"deltaFundSONm1", "[", 
         RowBox[{"a1", ",", "a2"}], "]"}], "  ", 
        RowBox[{"RB", "[", 
         RowBox[{
          SuperscriptBox["k", "2"], ",", 
          RowBox[{"sps", "[", 
           RowBox[{"p2", ",", "p2"}], "]"}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"R\[Sigma]\[Sigma]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "p2_"}], "}"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"RB", "[", 
        RowBox[{
         SuperscriptBox["k", "2"], ",", 
         RowBox[{"sps", "[", 
          RowBox[{"p2", ",", "p2"}], "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Regulator", " ", "Derivatives"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rdot\[CapitalPi]\[CapitalPi]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "a1_", ",", "p2_", ",", "a2_"}], "}"}], "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"deltaFundSONm1", "[", 
         RowBox[{"a1", ",", "a2"}], "]"}], " ", 
        RowBox[{"RBdot", "[", 
         RowBox[{
          SuperscriptBox["k", "2"], ",", 
          RowBox[{"sps", "[", 
           RowBox[{"p2", ",", "p2"}], "]"}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rdot\[Sigma]\[Sigma]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "p2_"}], "}"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"RBdot", "[", 
        RowBox[{
         SuperscriptBox["k", "2"], ",", 
         RowBox[{"sps", "[", 
          RowBox[{"p2", ",", "p2"}], "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Inverse", " ", "Propagators"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]\[CapitalPi]\[CapitalPi]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "a1_", ",", "p2_", ",", "a2_"}], "}"}], "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"deltaFundSONm1", "[", 
         RowBox[{"a1", ",", "a2"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"p2", ",", "p2"}], "]"}], "+", "m2Pi"}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]\[Sigma]\[Sigma]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "p2_"}], "}"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"sp", "[", 
          RowBox[{"p2", ",", "p2"}], "]"}], "+", "m2Sigma"}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "Propagators", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"G\[CapitalPi]\[CapitalPi]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "a1_", ",", "p2_", ",", "a2_"}], "}"}], "]"}], 
       "\[RuleDelayed]", " ", 
       RowBox[{
        RowBox[{"deltaFundSONm1", "[", 
         RowBox[{"a1", ",", "a2"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"sp", "[", 
             RowBox[{"p1", ",", "p1"}], "]"}], "+", "m2Pi", "+", 
            RowBox[{"RB", "[", 
             RowBox[{
              SuperscriptBox["k", "2"], ",", 
              RowBox[{"sps", "[", 
               RowBox[{"p1", ",", "p1"}], "]"}]}], "]"}]}], ")"}]}], 
         ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"G\[Sigma]\[Sigma]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "p2_"}], "}"}], "]"}], "\[RuleDelayed]", " ", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"p1", ",", "p1"}], "]"}], "+", "m2Sigma", "+", 
          RowBox[{"RB", "[", 
           RowBox[{
            SuperscriptBox["k", "2"], ",", 
            RowBox[{"sps", "[", 
             RowBox[{"p1", ",", "p1"}], "]"}]}], "]"}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Scalar", " ", "Vertices"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]\[Sigma]\[Sigma]\[Sigma]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "}"}], "]"}], " ", ":>", 
       RowBox[{"\[Lambda]m\[CapitalPi]n\[Sigma]", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "3"}], "]"}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"\[CapitalGamma]\[CapitalPi]\[CapitalPi]\[Sigma]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "a1_", ",", "p2_", ",", "a2_", ",", "p3_"}], 
         "}"}], "]"}], " ", ":>", 
       RowBox[{"\[Lambda]m\[CapitalPi]n\[Sigma]", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2"}], "}"}], ",", "1"}], "]"}]}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]\[CapitalPi]\[CapitalPi]\[Sigma]\[Sigma]", "[", 
        RowBox[{"{", 
         RowBox[{
         "p1_", ",", "a1_", ",", "p2_", ",", "a2_", ",", "p3_", ",", "p4_"}], 
         "}"}], "]"}], " ", ":>", 
       RowBox[{"\[Lambda]m\[CapitalPi]n\[Sigma]", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2"}], "}"}], ",", "2"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "\[CapitalGamma]\[CapitalPi]\[CapitalPi]\[CapitalPi]\[CapitalPi]", "[", 
        RowBox[{"{", 
         RowBox[{
         "p1_", ",", "a1_", ",", "p2_", ",", "a2_", ",", "p3_", ",", "a3_", 
          ",", "p4_", ",", "a4_"}], "}"}], "]"}], ":>", 
       RowBox[{"\[Lambda]m\[CapitalPi]n\[Sigma]", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4"}], "}"}], ",", "0"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]\[Sigma]\[Sigma]\[Sigma]\[Sigma]", "[", 
        RowBox[{"{", 
         RowBox[{"p1_", ",", "p2_", ",", "p3_", ",", "p4_"}], "}"}], "]"}], ":>", 
       RowBox[{"\[Lambda]m\[CapitalPi]n\[Sigma]", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "4"}], "]"}]}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sanity", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]\[CapitalPi]\[CapitalPi]", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "p"}], ",", "a1", ",", "p", ",", "a2"}], "}"}], 
           "]"}], "+", 
          RowBox[{"R\[CapitalPi]\[CapitalPi]", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "p"}], ",", "a1", ",", "p", ",", "a2"}], "}"}], 
           "]"}]}], ")"}], 
        RowBox[{"G\[CapitalPi]\[CapitalPi]", "[", 
         RowBox[{"{", 
          RowBox[{"p", ",", "a2", ",", 
           RowBox[{"-", "p"}], ",", "a1"}], "}"}], "]"}]}], "//.", 
       "FeynmanRules"}], "//", "FormTrace"}], "//", "expandScalarProducts"}], 
    "//", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<sanity check is \>\"", ",", " ", "sanity", ",", " ", 
     "\"\<, should be \>\"", ",", 
     RowBox[{"N", "-", "1"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sanity", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]\[Sigma]\[Sigma]", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "p"}], ",", "p"}], "}"}], "]"}], "+", 
          RowBox[{"R\[Sigma]\[Sigma]", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "p"}], ",", "p"}], "}"}], "]"}]}], ")"}], 
        RowBox[{"G\[Sigma]\[Sigma]", "[", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"-", "p"}]}], "}"}], "]"}]}], "//.", "FeynmanRules"}], "//",
       "FormTrace"}], "//", "expandScalarProducts"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<sanity check is \>\"", ",", " ", "sanity", ",", " ", 
    "\"\<, should be \>\"", ",", "1"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.892789604744287*^9, 3.892789611264728*^9}, {
   3.892789734868867*^9, 3.892789738060098*^9}, {3.892789789794458*^9, 
   3.89278979160991*^9}, {3.892791269502255*^9, 3.892791299822594*^9}, {
   3.89282351151918*^9, 3.892823544172801*^9}, {3.89282357822473*^9, 
   3.89282367810303*^9}, {3.892824054823886*^9, 3.892824064912712*^9}, {
   3.892824211443521*^9, 3.8928242115575457`*^9}, {3.892824547068285*^9, 
   3.892824579409577*^9}, {3.892824723278837*^9, 3.89282473217141*^9}, {
   3.892825233979411*^9, 3.892825287915884*^9}, {3.89282542862123*^9, 
   3.892825428780035*^9}, {3.892827045299077*^9, 3.89282705088691*^9}, 
   3.892827706415353*^9, {3.892828084408855*^9, 3.89282809101975*^9}, {
   3.89292307002159*^9, 3.8929230740609713`*^9}, {3.892923130985557*^9, 
   3.892923132413261*^9}, {3.90057404888627*^9, 3.900574058327969*^9}, {
   3.900574126225379*^9, 3.900574127069152*^9}, {3.900666072642438*^9, 
   3.900666105119523*^9}, {3.9006754244923487`*^9, 3.900675500330313*^9}, {
   3.900675541720037*^9, 3.900675542834586*^9}, {3.900675897439345*^9, 
   3.9006760391489983`*^9}, {3.900676168920204*^9, 3.900676193199398*^9}, {
   3.90068184418544*^9, 3.900681861390801*^9}, {3.901198540250696*^9, 
   3.901198653940171*^9}, {3.901198713568922*^9, 3.901198723601839*^9}, {
   3.90120003217673*^9, 3.9012000397765017`*^9}, {3.901200069924193*^9, 
   3.901200079004595*^9}, {3.902395336890758*^9, 3.902395348662688*^9}, {
   3.90239612012903*^9, 3.902396156338917*^9}, {3.902897060360045*^9, 
   3.902897067308161*^9}, {3.902909479515085*^9, 3.9029094919580173`*^9}, {
   3.90411673294358*^9, 3.904116760791142*^9}, 3.9070586286323843`*^9, {
   3.9071583737296333`*^9, 3.907158421475068*^9}, {3.909042237825175*^9, 
   3.909042262131609*^9}, {3.90904383469197*^9, 3.909043906008979*^9}, {
   3.909043948502819*^9, 3.9090439852404*^9}, {3.911024412404582*^9, 
   3.911024417494397*^9}, {3.911033562774437*^9, 3.911033656784293*^9}, {
   3.911033775055947*^9, 3.911033784612448*^9}, {3.916724007828101*^9, 
   3.9167241192209263`*^9}, {3.916724363692504*^9, 3.916724382560019*^9}, {
   3.924955227965728*^9, 3.924955237974759*^9}, {3.92495528424854*^9, 
   3.9249552871236153`*^9}, {3.933261271221874*^9, 3.93326138106819*^9}, {
   3.933261447068013*^9, 3.933261526490492*^9}, {3.9379699650410624`*^9, 
   3.937969969612784*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e33a8eae-b233-4e28-8f3f-ab095ce96544"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sanity check is \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "N"}], 
   "\[InvisibleSpace]", "\<\", should be \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "N"}]}],
  SequenceForm["sanity check is ", -1 + N, ", should be ", -1 + N],
  Editable->False]], "Print",
 CellChangeTimes->{{3.933261516470175*^9, 3.933261526808796*^9}, 
   3.933262122880564*^9, 3.933262472224783*^9, 3.933262657763996*^9, 
   3.933262802652082*^9, 3.933262937918285*^9, 3.9332631176671143`*^9, 
   3.933263766696668*^9, 3.9332639627956953`*^9, 3.933264077204566*^9, 
   3.933264154022818*^9, 3.933264787666377*^9, 3.933264960658638*^9, 
   3.933298510316874*^9, 3.933300973857143*^9, 3.933301451123976*^9, 
   3.9333015797394*^9, 3.933301674187806*^9, 3.933301876461129*^9, 
   3.933302215638339*^9, 3.933302551866072*^9, 3.933304409309058*^9, 
   3.933304882407584*^9, 3.9333049477344637`*^9, 3.933304995919868*^9, 
   3.933305117899809*^9, 3.937969995023285*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"a8fb42d0-1f28-4afe-913c-7f95b9c86dbd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sanity check is \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", should be \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["sanity check is ", 1, ", should be ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.933261516470175*^9, 3.933261526808796*^9}, 
   3.933262122880564*^9, 3.933262472224783*^9, 3.933262657763996*^9, 
   3.933262802652082*^9, 3.933262937918285*^9, 3.9332631176671143`*^9, 
   3.933263766696668*^9, 3.9332639627956953`*^9, 3.933264077204566*^9, 
   3.933264154022818*^9, 3.933264787666377*^9, 3.933264960658638*^9, 
   3.933298510316874*^9, 3.933300973857143*^9, 3.933301451123976*^9, 
   3.9333015797394*^9, 3.933301674187806*^9, 3.933301876461129*^9, 
   3.933302215638339*^9, 3.933302551866072*^9, 3.933304409309058*^9, 
   3.933304882407584*^9, 3.9333049477344637`*^9, 3.933304995919868*^9, 
   3.933305117899809*^9, 3.937969995024384*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"038e4299-f203-42ee-8469-8b009e379368"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["fRG setup and truncation", "Chapter",
 CellChangeTimes->{{3.892827828475711*^9, 3.892827831379879*^9}, {
  3.900574435384371*^9, 
  3.900574439767666*^9}},ExpressionUUID->"4b821c80-e3ce-4929-aa6b-\
0e6506f5b834"],

Cell["\<\
The fRG flow equation for QMeS and the truncation for the scalar sector. We \
put in some higher-order scatterings, but these do not couple into the flow \
equation, as we only flow the potential.\
\>", "Text",
 CellChangeTimes->{{3.903251167082494*^9, 3.903251176247222*^9}, {
  3.933300476408813*^9, 
  3.933300513143455*^9}},ExpressionUUID->"d544db42-5ac3-470b-884b-\
95595b9d3ce8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fRGEq", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Prefactor\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", "/", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<Regulatordot\>\""}], ",", " ", 
       
       RowBox[{"\"\<indices\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}]}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<Propagator\>\""}], ",", " ", 
       RowBox[{"\"\<indices\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}]}]}], "|>"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fields", " ", "=", " ", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<bosonic\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]", "[", "p", "]"}], ",", 
        RowBox[{"\[CapitalPi]", "[", 
         RowBox[{"p", ",", 
          RowBox[{"{", "a", "}"}]}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "                 ", 
     RowBox[{"\"\<fermionic\>\"", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Truncation", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "\[Sigma]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalPi]", ",", "\[CapitalPi]"}], "}"}], ",", 
     RowBox[{"(*", " ", "propagators", " ", "*)"}], "\[IndentingNewLine]", 
     " ", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "\[Sigma]", ",", "\[Sigma]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "\[CapitalPi]", ",", "\[CapitalPi]"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "\[Sigma]", ",", "\[Sigma]", ",", "\[Sigma]"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Sigma]", ",", "\[Sigma]", ",", "\[CapitalPi]", ",", "\[CapitalPi]"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[CapitalPi]", ",", "\[CapitalPi]", ",", "\[CapitalPi]", ",", 
       "\[CapitalPi]"}], "}"}]}], 
    RowBox[{"(*", " ", 
     RowBox[{"scalar", " ", "scatterings"}], " ", "*)"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetupfRG", " ", "=", " ", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<MasterEquation\>\"", "\[Rule]", "fRGEq"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<FieldSpace\>\"", "\[Rule]", "fields"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Truncation\>\"", "\[Rule]", "Truncation"}]}], "|>"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQre5ofvsXw1tH9cVxz0B0Vr7Zsj9A+tcSx7UgetU9
thVqjG8dv2k+AtM8zRbXQPSO053XQbQao8XGvfxvHZU4PxwC0fvOXY38BKRv
vkqMA9ETFBZMBtEnNqZMBdHXGPgYfQXeOtrlrWcC0c/WWFd9ANJLDDVrQPQm
edO1ILpHb+o6EH19k7XXHZG3jn9OGniD6MOpe0NB9KFt86JA9KSst6pzZN46
fsh5rw6iOc5KGIJoOy97MB31bJG3qs5bx58ZikEgOi51d7qD3ltHhvDmTBB9
bVeTaj+Q/nfFQA1Ev1DaI+5k99ZRyva2FIguif7cJuH31nFDmXI7iL60lGEn
iL6eyb0LRBttmLEPRDttv3MARO/Luz9ZGkhvOfcOTAMAEDeqqw==
  "],
 CellLabel->"In[12]:=",ExpressionUUID->"48fc1dca-7d12-4b24-b85d-70d57240af1a"],

Cell["\<\
DiFfRG  allows to set what kind of flow equations use the CPU and which use \
the GPU by invoking SetDevice[n, Device], where device is either \
\[OpenCurlyDoubleQuote]TBB\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]GPU\[CloseCurlyDoubleQuote] and n is the number of \
non-radial directions (in vacuum, this is the number of angles, at finiteT \
this is usally the q0-integration plus the number of angles). Here, we have \
flows with zero angles and we wish to integrate them on the CPU, so we use \
SetDevice[0,\[CloseCurlyDoubleQuote]TBB\[CloseCurlyDoubleQuote]].\
\>", "Text",
 CellChangeTimes->{{3.9333005313910227`*^9, 
  3.933300655846229*^9}},ExpressionUUID->"b181418c-e3f2-4529-85e6-\
a901ada42487"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDevice", "[", 
  RowBox[{"0", ",", "\"\<TBB\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowDevice", "[", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.930996775054727*^9, 3.930996809368121*^9}, {
  3.933300524351633*^9, 3.933300524662347*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"494003e1-14c4-45cf-9ad7-aa86099fb142"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Devices used: \"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|0 -> "TBB", 1 -> "TBB", 2 -> "GPU", 3 -> "GPU"|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[34], 
           TypeSystem`PackageScope`AtomShape[31.5]]], 20000, 
         DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["GPU", "TBB"]], 4], 
       "Meta" -> <|MaxItems -> 20000|>, "RowTarget" -> 20, "ColumnTarget" -> 
       10, "Shape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[34], 
           TypeSystem`PackageScope`AtomShape[31.5]]], 20000, 
         DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["GPU", "TBB"]], 4], "Path" -> {}, 
       "DisplayedRowCount" -> 20000, "DisplayedColumnCount" -> 1, 
       "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[0]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["TBB", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[0]}, "Item", False], "Mouse"], 
                ImageSize -> {{31.5, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[1]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["TBB", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[1]}, "Item", False], "Mouse"], 
                ImageSize -> {{31.5, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[2]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["GPU", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[2]}, "Item", False], "Mouse"], 
                ImageSize -> {{31.5, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[3]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["GPU", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[3]}, "Item", False], "Mouse"], 
                ImageSize -> {{31.5, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
       Replace[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
          Except[
           Alternatives[
            Blank[Spacer], ""]]] :> 
        TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
         TypeSystem`NestedGrid`PackagePrivate`bar]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{82.5, {51.6875, 56.984375}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{82.5, {51.6875, 56.984375}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}],
  SequenceForm["Devices used: ", 
   Dataset[<|0 -> "TBB", 1 -> "TBB", 2 -> "GPU", 3 -> "GPU"|>, 
    TypeSystem`Assoc[
     TypeSystem`Atom[Integer], 
     TypeSystem`Atom[
      TypeSystem`Enumeration["GPU", "TBB"]], 4], <|MaxItems -> 20000|>]],
  Editable->False]], "Print",
 CellChangeTimes->{3.930996809608238*^9, 3.9309976644001513`*^9, 
  3.933259528245927*^9, 3.933261539459203*^9, 3.933262126719323*^9, 
  3.9332624723346*^9, 3.933262661726034*^9, 3.933262802756487*^9, 
  3.933262938056222*^9, 3.933263117778621*^9, 3.933263766833501*^9, 
  3.933263962966992*^9, 3.933264077308877*^9, 3.933264154131907*^9, 
  3.933264787769867*^9, 3.933264960836781*^9, 3.93329851041087*^9, 
  3.933300524986771*^9, 3.933300973981718*^9, 3.933301451204237*^9, 
  3.933301579911199*^9, 3.9333016742828197`*^9, 3.933301876553796*^9, 
  3.933302215737594*^9, 3.933302551955071*^9, 3.933304409377986*^9, 
  3.933304882462392*^9, 3.933304947792416*^9, 3.933304995981099*^9, 
  3.9333051179729843`*^9, 3.937970000212351*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"21ff92fa-c70e-49f5-8395-3ea5ce50442f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Generation", "Section",
 CellChangeTimes->{{3.9151816881105227`*^9, 
  3.915181694859267*^9}},ExpressionUUID->"f9918ad9-3d4d-4315-9995-\
8ff6696b3cd4"],

Cell["\<\
We  have  one kernel (kernelV) for the effective potential, where we also \
need jacobians, so we enable AD. In the parameter list, m2Pi and m2Sigma are \
funktions of V and thus we also enable AD for them.\
\>", "Text",
 CellChangeTimes->{{3.9333006695347033`*^9, 
  3.933300716566009*^9}},ExpressionUUID->"76dba58c-be29-45bd-a3f3-\
571f70e4e97d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kernelV", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Path\>\"", "->", "\"\<V\>\""}], ",", 
     RowBox[{"\"\<Name\>\"", "->", "\"\<V\>\""}], ",", 
     RowBox[{"\"\<Type\>\"", "->", "\"\<Quadrature\>\""}], ",", 
     RowBox[{"\"\<Angles\>\"", "->", "0"}], ",", 
     RowBox[{"\"\<d\>\"", "->", "3"}], ",", 
     RowBox[{"\"\<AD\>\"", "->", "True"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kernels", "=", 
    RowBox[{"{", "kernelV", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kernelParameterList", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<N\>\""}], ",", 
       RowBox[{"\"\<Type\>\"", "->", "\"\<Constant\>\""}], ",", 
       RowBox[{"\"\<AD\>\"", "->", "False"}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<T\>\""}], ",", 
       RowBox[{"\"\<Type\>\"", "->", "\"\<Constant\>\""}], ",", 
       RowBox[{"\"\<AD\>\"", "->", "False"}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<rhoPhi\>\""}], ",", 
       RowBox[{"\"\<Type\>\"", "->", "\"\<Constant\>\""}], ",", 
       RowBox[{"\"\<AD\>\"", "->", "False"}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "masses", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<m2Pi\>\""}], ",", 
       RowBox[{"\"\<Type\>\"", "->", "\"\<Variable\>\""}], ",", 
       RowBox[{"\"\<AD\>\"", "->", "True"}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<m2Sigma\>\""}], ",", 
       RowBox[{"\"\<Type\>\"", "->", "\"\<Variable\>\""}], ",", 
       RowBox[{"\"\<AD\>\"", "->", "True"}]}], "|>"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.915258209885964*^9, 3.915258240190913*^9}, 
   3.915266175272238*^9, {3.915459229537651*^9, 3.915459231719952*^9}, {
   3.915459544128207*^9, 3.915459585709551*^9}, {3.915464295436522*^9, 
   3.915464303364274*^9}, 3.915465678914921*^9, {3.915465758093082*^9, 
   3.915465761494755*^9}, {3.915465861473659*^9, 3.915465864611319*^9}, 
   3.915465964902631*^9, {3.915516302433152*^9, 3.915516330957924*^9}, {
   3.915517666971858*^9, 3.915517668272999*^9}, 3.915519437867091*^9, 
   3.915524853395299*^9, {3.915862364689059*^9, 3.915862369164813*^9}, {
   3.9159033127447968`*^9, 3.915903348607955*^9}, {3.915950290940103*^9, 
   3.915950298380841*^9}, {3.916036162094462*^9, 3.916036171608778*^9}, 
   3.916036240500588*^9, {3.916049380094793*^9, 3.916049381384636*^9}, {
   3.916055973569646*^9, 3.916055990425716*^9}, {3.916637694562381*^9, 
   3.9166377142003317`*^9}, {3.916637921814954*^9, 3.916637984981637*^9}, {
   3.916638247133191*^9, 3.916638314594941*^9}, {3.916638572266489*^9, 
   3.916638603366653*^9}, {3.9166390370309*^9, 3.916639037490801*^9}, {
   3.916639622376867*^9, 3.916639622867054*^9}, {3.916640187607266*^9, 
   3.916640195791728*^9}, {3.916724536504049*^9, 3.916724720987135*^9}, {
   3.916730003393959*^9, 3.916730049901412*^9}, {3.9171670396006403`*^9, 
   3.917167049315883*^9}, {3.917167234238165*^9, 3.917167241193379*^9}, {
   3.917171634936475*^9, 3.917171653428961*^9}, {3.9171740023560686`*^9, 
   3.917174010775537*^9}, {3.917339271877316*^9, 3.917339273184737*^9}, {
   3.922247441412298*^9, 3.922247446408291*^9}, {3.930996409503117*^9, 
   3.930996413367758*^9}, {3.933259290801828*^9, 3.933259316729851*^9}, {
   3.9333006655832987`*^9, 3.933300665710601*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"40087e1a-3d3a-4ddf-87e2-0cfa92a0b545"],

Cell["\<\
Finally, we  create  the  Flow  class, the  definition  file  and  the  CMake \
 file . We also chose to give some optional arguments which change the \
regulator used for the flows.\
\>", "Text",
 CellChangeTimes->{{3.933300722806349*^9, 
  3.933300801094123*^9}},ExpressionUUID->"9e92dfe2-f3bd-4724-b7ff-\
c64bb6be9ba5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MakeFlowClassFiniteT", "[", 
  RowBox[{"\"\<ON_finiteT\>\"", ",", "kernels", ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Regulator\>\"", "->", "\"\<PolynomialExpRegulator\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"\"\<RegulatorOptionCode\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<reg_opts\>\"", ",", 
      "\"\<struct reg_opts { static constexpr uint order = 6; };\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.916639019336201*^9, 3.916639022020112*^9}, {
   3.916639621459154*^9, 3.916639625807558*^9}, {3.916724724804674*^9, 
   3.91672473084836*^9}, {3.916731583092078*^9, 3.9167315855162487`*^9}, {
   3.9173546492801857`*^9, 3.917354655244285*^9}, {3.918619786491742*^9, 
   3.9186197866282187`*^9}, 3.930996360671405*^9, {3.930997543189738*^9, 
   3.9309975695798388`*^9}, {3.933259321395198*^9, 3.9332593576415877`*^9}, 
   3.933259541765813*^9, {3.93330076660607*^9, 3.933300770461643*^9}, {
   3.933304397656683*^9, 3.933304398920504*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9d29604d-289c-4088-8424-086299117150"],

Cell[CellGroupData[{

Cell[BoxData["\<\"/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/\
flows/def.hh unchanged\"\>"], "Print",
 CellChangeTimes->{{3.933259531443254*^9, 3.933259542909333*^9}, 
   3.933261552723453*^9, 3.933262128885688*^9, 3.933262472477621*^9, 
   3.93326266394154*^9, 3.933262802901373*^9, 3.933262938216838*^9, 
   3.9332631179251137`*^9, 3.933263766989601*^9, 3.933263963143088*^9, 
   3.933264077449353*^9, 3.933264154277542*^9, 3.9332647879187326`*^9, 
   3.933264961012207*^9, 3.933298510550132*^9, 3.933300974125839*^9, {
   3.933301451350878*^9, 3.933301486631678*^9}, 3.933301580088606*^9, 
   3.933301674423882*^9, 3.933301876684808*^9, 3.933302215867975*^9, 
   3.933302552088009*^9, 3.9333044095006037`*^9, 3.933304882590029*^9, 
   3.933304947928891*^9, 3.9333049961122913`*^9, 3.933305118104869*^9, 
   3.937970004704811*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"ca0d9885-9b1f-44fb-b82f-8cf0d3526042"],

Cell[BoxData["\<\"/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/\
flows/flows.hh unchanged\"\>"], "Print",
 CellChangeTimes->{{3.933259531443254*^9, 3.933259542909333*^9}, 
   3.933261552723453*^9, 3.933262128885688*^9, 3.933262472477621*^9, 
   3.93326266394154*^9, 3.933262802901373*^9, 3.933262938216838*^9, 
   3.9332631179251137`*^9, 3.933263766989601*^9, 3.933263963143088*^9, 
   3.933264077449353*^9, 3.933264154277542*^9, 3.9332647879187326`*^9, 
   3.933264961012207*^9, 3.933298510550132*^9, 3.933300974125839*^9, {
   3.933301451350878*^9, 3.933301486631678*^9}, 3.933301580088606*^9, 
   3.933301674423882*^9, 3.933301876684808*^9, 3.933302215867975*^9, 
   3.933302552088009*^9, 3.9333044095006037`*^9, 3.933304882590029*^9, 
   3.933304947928891*^9, 3.9333049961122913`*^9, 3.933305118104869*^9, 
   3.937970004780888*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"c9f3bd39-1b48-47ec-8d8e-8b8e63cee5f7"],

Cell[BoxData["\<\"/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/\
flows/flows.cc unchanged\"\>"], "Print",
 CellChangeTimes->{{3.933259531443254*^9, 3.933259542909333*^9}, 
   3.933261552723453*^9, 3.933262128885688*^9, 3.933262472477621*^9, 
   3.93326266394154*^9, 3.933262802901373*^9, 3.933262938216838*^9, 
   3.9332631179251137`*^9, 3.933263766989601*^9, 3.933263963143088*^9, 
   3.933264077449353*^9, 3.933264154277542*^9, 3.9332647879187326`*^9, 
   3.933264961012207*^9, 3.933298510550132*^9, 3.933300974125839*^9, {
   3.933301451350878*^9, 3.933301486631678*^9}, 3.933301580088606*^9, 
   3.933301674423882*^9, 3.933301876684808*^9, 3.933302215867975*^9, 
   3.933302552088009*^9, 3.9333044095006037`*^9, 3.933304882590029*^9, 
   3.933304947928891*^9, 3.9333049961122913`*^9, 3.933305118104869*^9, 
   3.937970004899659*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"3c06b2cd-14cb-4671-8b3c-06f2bb78a424"],

Cell[BoxData["\<\"/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/\
flows/CMakeLists.txt unchanged\"\>"], "Print",
 CellChangeTimes->{{3.933259531443254*^9, 3.933259542909333*^9}, 
   3.933261552723453*^9, 3.933262128885688*^9, 3.933262472477621*^9, 
   3.93326266394154*^9, 3.933262802901373*^9, 3.933262938216838*^9, 
   3.9332631179251137`*^9, 3.933263766989601*^9, 3.933263963143088*^9, 
   3.933264077449353*^9, 3.933264154277542*^9, 3.9332647879187326`*^9, 
   3.933264961012207*^9, 3.933298510550132*^9, 3.933300974125839*^9, {
   3.933301451350878*^9, 3.933301486631678*^9}, 3.933301580088606*^9, 
   3.933301674423882*^9, 3.933301876684808*^9, 3.933302215867975*^9, 
   3.933302552088009*^9, 3.9333044095006037`*^9, 3.933304882590029*^9, 
   3.933304947928891*^9, 3.9333049961122913`*^9, 3.933305118104869*^9, 
   3.937970004900531*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"0b454794-6f58-4cf3-bbcf-e0e35bf80658"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Potential", "Chapter",
 CellChangeTimes->{{3.917172742454982*^9, 3.917172751025159*^9}, 
   3.9332999468574467`*^9},ExpressionUUID->"911c2e6e-c28a-41b7-bf57-\
aa463895d797"],

Cell["\<\
Getting  the  flow equation is now simple: From QMeS we obtain the bare \
flows, then we insert the feynman rules and perform a matsubara sum. The \
resulting formula is then exported using MakeKernel[kernel, \
parameters,formula].\
\>", "Text",
 CellChangeTimes->{{3.933300805453889*^9, 
  3.933300863965383*^9}},ExpressionUUID->"f3271e6b-c69a-4716-bdc4-\
2f7caf0680b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DiagramsV", "=", 
    RowBox[{"DeriveFunctionalEquation", "[", 
     RowBox[{"SetupfRG", ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"\"\<OutputLevel\>\"", "->", "\"\<FullDiagrams\>\""}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProjectedV", "=", 
   RowBox[{"DiagramsV", "//.", "FeynmanRules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VLoop", "=", 
   RowBox[{
    RowBox[{"expandScalarProductsFiniteT", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"FormTrace", ",", "ProjectedV"}], "]"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"VLoop", "=", 
  RowBox[{
   RowBox[{"simplifyAllMomenta", "[", 
    RowBox[{"q", ",", "VLoop"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VLoop", "=", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "m2Pi"}], "-", 
        SuperscriptBox["q", "2"], "-", 
        RowBox[{"RB", "[", 
         RowBox[{
          SuperscriptBox["k", "2"], ",", 
          SuperscriptBox["q", "2"]}], "]"}]}], "<", "0"}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "m2Sigma"}], "-", 
        SuperscriptBox["q", "2"], "-", 
        RowBox[{"RB", "[", 
         RowBox[{
          SuperscriptBox["k", "2"], ",", 
          SuperscriptBox["q", "2"]}], "]"}]}], "<", "0"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MatsubaraSum", "[", 
           RowBox[{"#", ",", "q0", ",", "T"}], "]"}], "&"}], ",", "VLoop"}], 
        "]"}], "//", "Total"}], "//", "FullSimplify"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VLoop", "=", 
   RowBox[{"SafeFiniteTFunctions", "[", 
    RowBox[{"VLoop", ",", "T"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MakeKernel", "[", 
  RowBox[{"kernelV", ",", "kernelParameterList", ",", "VLoop"}], 
  "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9332595641289673`*^9, 3.9332596552805634`*^9}, {
  3.933299858394696*^9, 3.933299935768495*^9}, {3.933299993000907*^9, 
  3.933300209538416*^9}, {3.933302217529939*^9, 3.933302232408998*^9}, {
  3.933302559288951*^9, 3.933302560047727*^9}, {3.937970027359981*^9, 
  3.937970060385248*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"128da070-bc87-423f-ac43-34cebf85f1da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "N"}], ")"}], " ", 
     RowBox[{"RBdot", "[", 
      RowBox[{
       SuperscriptBox["k", "2"], ",", 
       SuperscriptBox["q", "2"]}], "]"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"m2Pi", "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q0", "2"], "+", 
       RowBox[{"RB", "[", 
        RowBox[{
         SuperscriptBox["k", "2"], ",", 
         SuperscriptBox["q", "2"]}], "]"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"RBdot", "[", 
     RowBox[{
      SuperscriptBox["k", "2"], ",", 
      SuperscriptBox["q", "2"]}], "]"}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"m2Sigma", "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q0", "2"], "+", 
       RowBox[{"RB", "[", 
        RowBox[{
         SuperscriptBox["k", "2"], ",", 
         SuperscriptBox["q", "2"]}], "]"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.933300036146001*^9, 3.933300074385364*^9}, 
   3.933300138968408*^9, {3.93330017747899*^9, 3.933300210763359*^9}, 
   3.933300977511658*^9, 3.9333014544605093`*^9, 3.933301583259033*^9, 
   3.933301677530467*^9, 3.933301879863198*^9, {3.933302226023047*^9, 
   3.933302232942971*^9}, {3.933302554751386*^9, 3.933302560697161*^9}, 
   3.933304412524148*^9, 3.93330488581599*^9, 3.933304951417707*^9, 
   3.933304999619627*^9, 3.93330512149422*^9, {3.937970020924403*^9, 
   3.937970060856695*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"eb31638f-a464-4465-a0d8-c277f21934eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"CothFiniteT", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"m2Sigma", "+", 
           SuperscriptBox["q", "2"], "+", 
           RowBox[{"RB", "[", 
            RowBox[{
             SuperscriptBox["k", "2"], ",", 
             SuperscriptBox["q", "2"]}], "]"}]}]], ",", "T"}], "]"}], " ", 
       SqrtBox[
        RowBox[{"m2Pi", "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"RB", "[", 
          RowBox[{
           SuperscriptBox["k", "2"], ",", 
           SuperscriptBox["q", "2"]}], "]"}]}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "N"}], ")"}], " ", 
       RowBox[{"CothFiniteT", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"m2Pi", "+", 
           SuperscriptBox["q", "2"], "+", 
           RowBox[{"RB", "[", 
            RowBox[{
             SuperscriptBox["k", "2"], ",", 
             SuperscriptBox["q", "2"]}], "]"}]}]], ",", "T"}], "]"}], " ", 
       SqrtBox[
        RowBox[{"m2Sigma", "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"RB", "[", 
          RowBox[{
           SuperscriptBox["k", "2"], ",", 
           SuperscriptBox["q", "2"]}], "]"}]}]]}]}], ")"}], " ", 
    RowBox[{"RBdot", "[", 
     RowBox[{
      SuperscriptBox["k", "2"], ",", 
      SuperscriptBox["q", "2"]}], "]"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"4", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m2Pi", "+", 
        SuperscriptBox["q", "2"], "+", 
        RowBox[{"RB", "[", 
         RowBox[{
          SuperscriptBox["k", "2"], ",", 
          SuperscriptBox["q", "2"]}], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"m2Sigma", "+", 
        SuperscriptBox["q", "2"], "+", 
        RowBox[{"RB", "[", 
         RowBox[{
          SuperscriptBox["k", "2"], ",", 
          SuperscriptBox["q", "2"]}], "]"}]}], ")"}]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{{3.933300036146001*^9, 3.933300074385364*^9}, 
   3.933300138968408*^9, {3.93330017747899*^9, 3.933300210763359*^9}, 
   3.933300977511658*^9, 3.9333014544605093`*^9, 3.933301583259033*^9, 
   3.933301677530467*^9, 3.933301879863198*^9, {3.933302226023047*^9, 
   3.933302232942971*^9}, {3.933302554751386*^9, 3.933302560697161*^9}, 
   3.933304412524148*^9, 3.93330488581599*^9, 3.933304951417707*^9, 
   3.933304999619627*^9, 3.93330512149422*^9, {3.937970020924403*^9, 
   3.9379700618118477`*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"3f132c07-b876-48ec-b682-d87f7d5bc26e"],

Cell[CellGroupData[{

Cell[BoxData["\<\"/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/\
flows/V/V.kernel unchanged\"\>"], "Print",
 CellChangeTimes->{{3.933299995850067*^9, 3.933300073707768*^9}, 
   3.933300138403893*^9, {3.933300177020851*^9, 3.933300210507138*^9}, 
   3.933300976628457*^9, 3.933301453583623*^9, 3.933301582375428*^9, 
   3.933301676680706*^9, 3.933301878975176*^9, {3.9333022255117197`*^9, 
   3.933302232708076*^9}, {3.933302554243778*^9, 3.933302560460864*^9}, 
   3.933304411957345*^9, 3.9333048852341137`*^9, 3.933304950830874*^9, 
   3.933304998998261*^9, 3.933305120653249*^9, {3.937970018507868*^9, 
   3.937970061952797*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"b0225226-c1af-4617-9f5e-e3f5d66f38d4"],

Cell[BoxData["\<\"/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/\
flows/V/V.hh unchanged\"\>"], "Print",
 CellChangeTimes->{{3.933299995850067*^9, 3.933300073707768*^9}, 
   3.933300138403893*^9, {3.933300177020851*^9, 3.933300210507138*^9}, 
   3.933300976628457*^9, 3.933301453583623*^9, 3.933301582375428*^9, 
   3.933301676680706*^9, 3.933301878975176*^9, {3.9333022255117197`*^9, 
   3.933302232708076*^9}, {3.933302554243778*^9, 3.933302560460864*^9}, 
   3.933304411957345*^9, 3.9333048852341137`*^9, 3.933304950830874*^9, 
   3.933304998998261*^9, 3.933305120653249*^9, {3.937970018507868*^9, 
   3.937970062111183*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"0757cdd2-ec62-4919-ae6a-f8743aeece1e"],

Cell[BoxData["\<\"/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/\
flows/V/V.cc unchanged\"\>"], "Print",
 CellChangeTimes->{{3.933299995850067*^9, 3.933300073707768*^9}, 
   3.933300138403893*^9, {3.933300177020851*^9, 3.933300210507138*^9}, 
   3.933300976628457*^9, 3.933301453583623*^9, 3.933301582375428*^9, 
   3.933301676680706*^9, 3.933301878975176*^9, {3.9333022255117197`*^9, 
   3.933302232708076*^9}, {3.933302554243778*^9, 3.933302560460864*^9}, 
   3.933304411957345*^9, 3.9333048852341137`*^9, 3.933304950830874*^9, 
   3.933304998998261*^9, 3.933305120653249*^9, {3.937970018507868*^9, 
   3.937970062292468*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"02e5c244-14e5-4048-bb7d-e0230643725f"],

Cell[BoxData["\<\"/home/franz/Documents/Uni/Code/DiFfRG/Examples/ONfiniteT/\
flows/V/V.cu unchanged\"\>"], "Print",
 CellChangeTimes->{{3.933299995850067*^9, 3.933300073707768*^9}, 
   3.933300138403893*^9, {3.933300177020851*^9, 3.933300210507138*^9}, 
   3.933300976628457*^9, 3.933301453583623*^9, 3.933301582375428*^9, 
   3.933301676680706*^9, 3.933301878975176*^9, {3.9333022255117197`*^9, 
   3.933302232708076*^9}, {3.933302554243778*^9, 3.933302560460864*^9}, 
   3.933304411957345*^9, 3.9333048852341137`*^9, 3.933304950830874*^9, 
   3.933304998998261*^9, 3.933305120653249*^9, {3.937970018507868*^9, 
   3.9379700622938957`*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"3cf9e17d-7ca3-4b51-ad0c-4fd4bee363d6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1185, 714},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b4057948-4980-4e7c-9911-155d401dacce"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 255, 4, 96, "Title",ExpressionUUID->"5b71f437-634b-42e9-b340-4c923acf3a10"],
Cell[838, 28, 324, 7, 33, "Text",ExpressionUUID->"989f4386-a678-4978-a5fb-4f3b725596b7"],
Cell[CellGroupData[{
Cell[1187, 39, 1457, 25, 91, "Input",ExpressionUUID->"20df238b-bf68-4457-b32a-37933d8ae3f5",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2669, 68, 1888, 30, 98, "Print",ExpressionUUID->"5d8cdf2e-609a-48a3-9d1f-4d863bf8b175"],
Cell[4560, 100, 2986, 47, 211, "Print",ExpressionUUID->"6738eee9-7f61-402f-b957-86dddbce7ec6"],
Cell[7549, 149, 1560, 24, 23, "Print",ExpressionUUID->"8a973825-cf4f-41ce-8e5d-6bb687bb3b15"],
Cell[9112, 175, 2009, 32, 41, "Print",ExpressionUUID->"651dc40d-7539-4dff-ac14-3411d20d3004"],
Cell[11124, 209, 2208, 33, 23, "Print",ExpressionUUID->"026a844e-7160-4bb8-9dd8-ba3088ff5b46"],
Cell[13335, 244, 2420, 37, 23, "Print",ExpressionUUID->"1c3ed5d6-4369-434e-a783-b16039cc33df"],
Cell[15758, 283, 2421, 37, 23, "Print",ExpressionUUID->"b4cab32d-84da-4cab-af16-72e3da48ad19"],
Cell[18182, 322, 1715, 26, 60, "Print",ExpressionUUID->"0576deb9-1eb9-466c-b345-8a272637fc04"],
Cell[19900, 350, 1560, 25, 23, "Print",ExpressionUUID->"1991ec9b-95cc-4f30-be46-f5ea09f18459"]
}, Open  ]]
}, Open  ]],
Cell[21487, 379, 331, 8, 33, "Text",ExpressionUUID->"ec71d988-2b9f-4917-a76e-66aab15f3b8e",
 InitializationCell->True],
Cell[21821, 389, 1124, 25, 91, "Input",ExpressionUUID->"98261f54-6495-4f58-a1f7-94651aeaffca",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[22970, 418, 158, 3, 67, "Chapter",ExpressionUUID->"8e013f21-4885-4ddc-ab0b-8ef8932a710d"],
Cell[23131, 423, 910, 22, 60, "Text",ExpressionUUID->"b0b75141-4838-4f7e-95bf-48874534124a"],
Cell[24044, 447, 4828, 133, 424, "Input",ExpressionUUID->"91b81fd7-2f9b-4800-8c8d-9734d7e2ede1",
 InitializationCell->True],
Cell[28875, 582, 320, 7, 33, "Text",ExpressionUUID->"3a71b534-65bb-47dc-9211-e42b5083f7b2"],
Cell[CellGroupData[{
Cell[29220, 593, 11173, 264, 770, "Input",ExpressionUUID->"e33a8eae-b233-4e28-8f3f-ab095ce96544",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[40418, 861, 1142, 22, 23, "Print",ExpressionUUID->"a8fb42d0-1f28-4afe-913c-7f95b9c86dbd"],
Cell[41563, 885, 1044, 18, 23, "Print",ExpressionUUID->"038e4299-f203-42ee-8469-8b009e379368"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42668, 910, 218, 4, 67, "Chapter",ExpressionUUID->"4b821c80-e3ce-4929-aa6b-0e6506f5b834"],
Cell[42889, 916, 395, 8, 55, "Text",ExpressionUUID->"d544db42-5ac3-470b-884b-95595b9d3ce8"],
Cell[43287, 926, 3338, 86, 305, "Input",ExpressionUUID->"48fc1dca-7d12-4b24-b85d-70d57240af1a",
 InitializationCell->True],
Cell[46628, 1014, 726, 12, 77, "Text",ExpressionUUID->"b181418c-e3f2-4529-85e6-a901ada42487"],
Cell[CellGroupData[{
Cell[47379, 1030, 377, 7, 67, "Input",ExpressionUUID->"494003e1-14c4-45cf-9ad7-aa86099fb142",
 InitializationCell->True],
Cell[47759, 1039, 30225, 542, 116, "Print",ExpressionUUID->"21ff92fa-c70e-49f5-8395-3ea5ce50442f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78021, 1586, 162, 3, 65, "Section",ExpressionUUID->"f9918ad9-3d4d-4315-9995-8ff6696b3cd4"],
Cell[78186, 1591, 358, 7, 55, "Text",ExpressionUUID->"76dba58c-be29-45bd-a3f3-571f70e4e97d"],
Cell[78547, 1600, 3860, 77, 252, "Input",ExpressionUUID->"40087e1a-3d3a-4ddf-87e2-0cfa92a0b545",
 InitializationCell->True],
Cell[82410, 1679, 332, 7, 33, "Text",ExpressionUUID->"9e92dfe2-f3bd-4724-b7ff-c64bb6be9ba5"],
Cell[CellGroupData[{
Cell[82767, 1690, 1144, 20, 111, "Input",ExpressionUUID->"9d29604d-289c-4088-8424-086299117150",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[83936, 1714, 951, 15, 23, "Print",ExpressionUUID->"ca0d9885-9b1f-44fb-b82f-8cf0d3526042"],
Cell[84890, 1731, 953, 15, 23, "Print",ExpressionUUID->"c9f3bd39-1b48-47ec-8d8e-8b8e63cee5f7"],
Cell[85846, 1748, 953, 15, 23, "Print",ExpressionUUID->"3c06b2cd-14cb-4671-8b3c-06f2bb78a424"],
Cell[86802, 1765, 959, 15, 23, "Print",ExpressionUUID->"0b454794-6f58-4cf3-bbcf-e0e35bf80658"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87834, 1788, 179, 3, 67, "Chapter",ExpressionUUID->"911c2e6e-c28a-41b7-bf57-aa463895d797"],
Cell[88016, 1793, 381, 8, 55, "Text",ExpressionUUID->"f3271e6b-c69a-4716-bdc4-2f7caf0680b0"],
Cell[CellGroupData[{
Cell[88422, 1805, 2484, 69, 231, "Input",ExpressionUUID->"128da070-bc87-423f-ac43-34cebf85f1da",
 InitializationCell->True],
Cell[90909, 1876, 1625, 43, 79, "Output",ExpressionUUID->"eb31638f-a464-4465-a0d8-c277f21934eb"],
Cell[92537, 1921, 2626, 74, 108, "Output",ExpressionUUID->"3f132c07-b876-48ec-b682-d87f7d5bc26e"],
Cell[CellGroupData[{
Cell[95188, 1999, 748, 12, 23, "Print",ExpressionUUID->"b0225226-c1af-4617-9f5e-e3f5d66f38d4"],
Cell[95939, 2013, 744, 12, 23, "Print",ExpressionUUID->"0757cdd2-ec62-4919-ae6a-f8743aeece1e"],
Cell[96686, 2027, 744, 12, 23, "Print",ExpressionUUID->"02e5c244-14e5-4048-bb7d-e0230643725f"],
Cell[97433, 2041, 746, 12, 23, "Print",ExpressionUUID->"3cf9e17d-7ca3-4b51-ad0c-4fd4bee363d6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

